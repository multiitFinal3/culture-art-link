<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.multi.culture_link.admin.culturalProperties.model.dao.CulturalPropertiesKeywordDAO">

    <insert id="save" parameterType="culturalPropertiesKeywordDTO">
        INSERT INTO cultural_properties_content_keyword (cultural_properties_id, keyword)
        VALUES (#{culturalPropertiesId}, #{keyword})
    </insert>

    <insert id="saveAll" parameterType="java.util.List">
        INSERT INTO cultural_properties_content_keyword (cultural_properties_id, keyword)
        VALUES
        <foreach item="keyword" collection="list" separator=",">
            (#{keyword.culturalPropertiesId}, #{keyword.keyword})
        </foreach>
    </insert>

    <select id="existsByCulturalPropertiesId" parameterType="int" resultType="boolean">
        SELECT EXISTS (
        SELECT 1
        FROM cultural_properties_content_keyword
        WHERE cultural_properties_id = #{culturalPropertiesId}
        )
    </select>


    <select id="getReviewContentsByCulturalPropertiesId" parameterType="int" resultType="string">
        SELECT content
        FROM cultural_properties_review
        WHERE cultural_properties_id = #{culturalPropertiesId}
    </select>


    <select id="existsByReviewCulturalPropertiesId" parameterType="int" resultType="boolean">
        SELECT EXISTS (
        SELECT 1
        FROM cultural_properties_review_keyword
        WHERE cultural_properties_id = #{culturalPropertiesId}
        )
    </select>




    <select id="getExistingKeywordIds" resultType="int">
        SELECT id
        FROM cultural_properties_review_keyword
        WHERE cultural_properties_id = #{culturalPropertiesId}
        ORDER BY id
        LIMIT 5
    </select>

    <update id="updateExistingKeywords">
        UPDATE cultural_properties_review_keyword
        SET
        keyword = CASE id
        <foreach collection="keywordList" item="item">
            WHEN #{item.id} THEN #{item.keyword}
        </foreach>
        END,
        updated_at = CURRENT_TIMESTAMP
        WHERE id IN
        <foreach collection="keywordList" item="item" open="(" separator="," close=")">
            #{item.id}
        </foreach>
    </update>

    <insert id="insertNewKeywords">
        INSERT INTO cultural_properties_review_keyword
        (cultural_properties_id, keyword)
        VALUES
        <foreach collection="keywords" item="keyword" separator=",">
            (#{culturalPropertiesId}, #{keyword})
        </foreach>
    </insert>




    <update id="incrementKeywordSelectCount">
        UPDATE
        <choose>
            <when test="keywordType == 'content'">
                cultural_properties_content_keyword
            </when>
            <otherwise>
                cultural_properties_review_keyword
            </otherwise>
        </choose>
        SET select_count = select_count + 1
        WHERE id = #{keywordId}
    </update>


    <!-- 랜덤으로 5개 키워드를 선택하는 쿼리 -->
    <select id="getInitialKeywords" resultType="com.multi.culture_link.admin.culturalProperties.model.dto.KeywordDTO">
        SELECT keyword_id, keyword
        FROM vw_cultural_properties_combined_keyword_unique4
        ORDER BY RAND()
        LIMIT 5
    </select>

    <!-- 제외할 키워드 ID를 기반으로 랜덤으로 5개 키워드를 선택하는 쿼리 -->
    <select id="getKeywords" resultType="com.multi.culture_link.admin.culturalProperties.model.dto.KeywordDTO">
        SELECT keyword_id, keyword
        FROM vw_cultural_properties_combined_keyword_unique4
        <where>
            <if test="excludedKeywordIds != null and excludedKeywordIds.size() > 0">
                AND keyword_id NOT IN
                <foreach item="id" collection="excludedKeywordIds" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
        </where>
        ORDER BY RAND()
        LIMIT #{limit}
    </select>



    <insert id="saveUserKeyword">
        INSERT INTO cultural_properties_user_select_keyword (user_id, keyword, count)
        VALUES (#{userId}, #{keyword}, #{count})
        ON DUPLICATE KEY UPDATE count = #{count}
    </insert>






</mapper>