<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.multi.culture_link.culturalProperties.model.dao.CulturalPropertiesDAO">

    <resultMap id="culturalPropertiesResultMap"
               type="com.multi.culture_link.admin.culturalProperties.model.dto.CulturalPropertiesDTO">
        <!-- List<String> imgUrl 매핑 -->
        <result property="imgUrl" column="img_url" jdbcType="VARCHAR" javaType="java.util.List"
                typeHandler="com.multi.culture_link.admin.culturalProperties.model.dto.StringListTypeHandler"/>
        <!-- imgDesc 매핑 -->
        <result property="imgDesc" column="img_desc" jdbcType="VARCHAR"/>
        <!-- videoUrl 매핑 -->
        <result property="videoUrl" column="video_url" jdbcType="VARCHAR"/>
        <!-- narrationUrl 매핑 -->
        <result property="narrationUrl" column="narration_url" jdbcType="VARCHAR"/>
    </resultMap>




    <select id="listCulturalProperties" resultType="CulturalPropertiesDTO">
        SELECT *
        FROM cultural_properties
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="listAllCulturalProperties" resultType="CulturalPropertiesDTO">
        SELECT * FROM cultural_properties
    </select>

    <select id="getTotalCount" resultType="int">
        SELECT COUNT(*) FROM cultural_properties
    </select>


    <select id="getCulturalPropertyById" resultType="CulturalPropertiesDTO">
        SELECT * FROM cultural_properties WHERE id = #{id}
    </select>


    <insert id="addInterest" parameterType="CulturalPropertiesInterestDTO">
        INSERT INTO cultural_properties_interest (cultural_properties_id, user_id, interest_type)
        VALUES (#{culturalPropertiesId}, #{userId}, #{interestType})
        ON DUPLICATE KEY UPDATE interest_type = #{interestType};
    </insert>


    <delete id="removeInterest" parameterType="CulturalPropertiesInterestDTO">
        DELETE FROM cultural_properties_interest
        WHERE cultural_properties_id = #{culturalPropertiesId} AND user_id = #{userId};
    </delete>


    <select id="getInterest" resultType="CulturalPropertiesInterestDTO">
        SELECT c1.id AS culturalPropertiesId, c2.user_id, c2.interest_type
        FROM cultural_properties c1
        LEFT JOIN cultural_properties_interest c2 ON c1.id = c2.cultural_properties_id
        WHERE c2.user_id = #{userId}
        ORDER BY c1.created_at DESC
    </select>


    <select id="searchCulturalProperties" resultType="CulturalPropertiesDTO">
        SELECT * FROM cultural_properties
        <where>
            <if test="category != null and category != ''">
                AND category_name = #{category}
            </if>
            <if test="culturalPropertiesName != null and culturalPropertiesName != ''">
                AND cultural_properties_name LIKE CONCAT('%', #{culturalPropertiesName}, '%')
            </if>
            <if test="region != null and region != ''">
                AND (region LIKE CONCAT('%', #{region}, '%')
                OR district LIKE CONCAT('%', #{region}, '%')) <!-- region 또는 district에서 검색 -->
            </if>
            <if test="dynasty != null and dynasty != ''">
                AND dynasty LIKE CONCAT('%', #{dynasty}, '%')
            </if>
        </where>
        LIMIT #{offset}, #{pageSize}
    </select>

    <select id="countCulturalProperties" resultType="long">
        SELECT COUNT(*) FROM cultural_properties
        <where>
            <if test="category != null and category != ''">
                AND category_name = #{category}
            </if>
            <if test="culturalPropertiesName != null and culturalPropertiesName != ''">
                AND cultural_properties_name LIKE CONCAT('%', #{culturalPropertiesName}, '%')
            </if>
            <if test="region != null and region != ''">
                AND (region LIKE CONCAT('%', #{region}, '%')
                OR district LIKE CONCAT('%', #{region}, '%')) <!-- region 또는 district에서 검색 -->
            </if>
            <if test="dynasty != null and dynasty != ''">
                AND dynasty LIKE CONCAT('%', #{dynasty}, '%')
            </if>
        </where>
    </select>

    <select id="getAllCategories" resultType="string">
        SELECT DISTINCT category_name FROM cultural_properties
    </select>


    <!-- 1. 근처 문화재를 조회하는 쿼리 -->
    <select id="getNearbyPlace" resultType="CulturalPropertiesDTO">
        SELECT * FROM cultural_properties
        WHERE region = #{region} AND district = #{district} AND id != #{id}
    </select>


    <!-- 2. 특정 지역에서 랜덤으로 10개 데이터를 가져오는 쿼리, 특정 id 제외 -->
    <select id="getRandomPlace" resultType="CulturalPropertiesDTO">
        SELECT * FROM cultural_properties
        WHERE region = #{region} AND id != #{id}
        ORDER BY RAND() LIMIT 10
    </select>




<!--    <insert id="insertInterest">-->
<!--        INSERT INTO cultural_properties_interest (cultural_properties_id, user_id, interest_type)-->
<!--        VALUES (#{id}, #{userId}, #{interestType})-->
<!--        ON DUPLICATE KEY UPDATE interest_type = #{interestType}-->
<!--    </insert>-->

<!--    <delete id="deleteInterest">-->
<!--        DELETE FROM cultural_properties_interest-->
<!--        WHERE cultural_properties_id = #{id} AND user_id = #{userId}-->
<!--    </delete>-->

<!--    <select id="isLiked" resultType="boolean">-->
<!--        SELECT COUNT(*) > 0 FROM cultural_properties_interest-->
<!--        WHERE cultural_properties_id = #{id} AND user_id = #{userId} AND interest_type = 'LIKE'-->
<!--    </select>-->

<!--    <select id="isDisliked" resultType="boolean">-->
<!--        SELECT COUNT(*) > 0 FROM cultural_properties_interest-->
<!--        WHERE cultural_properties_id = #{id} AND user_id = #{userId} AND interest_type = 'DISLIKE'-->
<!--    </select>-->

<!--    <select id="getReview" resultType="com.example.demo.model.Review">-->
<!--        SELECT * FROM reviews WHERE property_id = #{propertyId} LIMIT 5-->
<!--    </select>-->

    <insert id="addReview" parameterType="CulturalPropertiesReviewDTO">
        INSERT INTO cultural_properties_review (cultural_properties_id, user_id, star, content)
        VALUES (#{culturalPropertiesId}, #{userId}, #{star}, #{content})
    </insert>


    <select id="getReviewsByCulturalPropertyId" parameterType="int" resultType="CulturalPropertiesReviewDTO">
        SELECT r.id, r.cultural_properties_id, r.user_id, r.star, r.content,
        u.user_name, u.user_profile_pic AS userProfileImage
        FROM cultural_properties_review r
        JOIN user u ON r.user_id = u.user_id
        WHERE r.cultural_properties_id = #{culturalPropertiesId}
    </select>


    <select id="findByReviewId" parameterType="int" resultType="CulturalPropertiesReviewDTO">
        SELECT *
        FROM cultural_properties_review
        WHERE id = #{id}
    </select>


    <delete id="deleteReview" parameterType="int">
        DELETE FROM cultural_properties_review
        WHERE id = #{id}
    </delete>


    <update id="updateReview" parameterType="CulturalPropertiesReviewDTO">
        UPDATE cultural_properties_review
        SET content = #{content}, star = #{star}
        WHERE id = #{id}
    </update>



<!--    <select id="getReview" resultType="CulturalPropertiesReviewDTO">-->
<!--        SELECT *-->
<!--        FROM cultural_properties_review-->
<!--        WHERE cultural_properties_id = #{culturalPropertiesId}-->
<!--        LIMIT #{pageable.offset}, #{pageable.pageSize}-->
<!--    </select>-->


<!--    <select id="getReview" resultType="CulturalPropertiesReviewDTO">-->
<!--        SELECT *-->
<!--        FROM cultural_properties_review-->
<!--        WHERE cultural_properties_id = #{culturalPropertiesId}-->
<!--        ORDER BY created_at DESC-->
<!--        LIMIT #{pageable.pageSize} OFFSET #{pageable.offset}-->
<!--    </select>-->


    <select id="getReview" parameterType="map" resultType="CulturalPropertiesReviewDTO">
        SELECT r.id, r.cultural_properties_id, r.user_id, r.star, r.content,
        u.user_name, u.user_profile_pic AS userProfileImage
        FROM cultural_properties_review r
        JOIN user u ON r.user_id = u.user_id
        WHERE r.cultural_properties_id = #{culturalPropertiesId}
        ORDER BY r.created_at DESC
        LIMIT #{pageable.pageSize} OFFSET #{pageable.offset}
    </select>

<!--    <select id="getReview" resultType="CulturalPropertiesReviewDTO">-->
<!--        SELECT r.id, r.cultural_properties_id, r.user_id, r.star, r.content,-->
<!--        u.user_name, u.user_profile_pic AS userProfileImage-->
<!--        FROM cultural_properties_review r-->
<!--        JOIN user u ON r.user_id = u.user_id-->
<!--        WHERE r.cultural_properties_id = #{culturalPropertiesId}-->
<!--        ORDER BY created_at DESC-->
<!--        LIMIT #{pageable.pageSize} OFFSET #{pageable.offset}-->
<!--    </select>-->


    <select id="countReview" resultType="int">
        SELECT COUNT(*)
        FROM cultural_properties_review
        WHERE cultural_properties_id = #{culturalPropertiesId}
    </select>






</mapper>