<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.multi.culture_link.exhibition.model.dao.ExhibitionDao"><!-- 메퍼위치하고  동일하게 네임스페이스 작성-->
<!--    다중 검색-->
    <select id="searchExhibition" parameterType="map" resultType="com.multi.culture_link.admin.exhibition.model.dto.api.ExhibitionApiDto">
        SELECT *,
        (SELECT AVG(stars) FROM exhibition_comment WHERE exhibition_id = ex.id) AS starsAVG
        FROM exhibition ex
        WHERE 1=1
        <if test="title != null and title != ''">
            AND title LIKE CONCAT('%', #{title}, '%')
        </if>
        <if test="artist != null and artist != ''">
            AND artist LIKE CONCAT('%', #{artist}, '%')
        </if>
        <if test="museum != null and museum != ''">
            AND museum LIKE CONCAT('%', #{museum}, '%')
        </if>
        ORDER BY created_at DESC
    </select>

    <select id="getExhibitionById" resultType="com.multi.culture_link.exhibition.model.dto.ExhibitionDto">
        SELECT e.*, ei.state,
               (SELECT AVG(stars) FROM exhibition_comment WHERE exhibition_id = e.id) AS starsAVG
        FROM exhibition e
                 LEFT JOIN exhibition_interested ei ON e.id = ei.exhibition_id AND ei.user_id = #{userId}
        WHERE e.id = #{exhibitionId}
    </select>

    <!-- 관심 데이터가 없으면 생성, 있으면 업데이트 -->
    <insert id="setInterested">
        INSERT INTO exhibition_interested (user_id, exhibition_id, state)
        VALUES (#{userId}, #{exhibitionId}, #{state})
            ON DUPLICATE KEY UPDATE state = #{state}
    </insert>

    <!--  관심 연결된 전시 데이터 -->
    <select id="getExhibition" resultType="com.multi.culture_link.exhibition.model.dto.ExhibitionDto">
        SELECT ex.*, ei.state,
               (SELECT AVG(stars) FROM exhibition_comment WHERE exhibition_id = ex.id) AS starsAVG
        FROM exhibition ex LEFT JOIN exhibition_interested ei ON ex.id = ei.exhibition_id AND ei.user_id = #{userId} ORDER BY ex.created_at DESC
    </select>





    <!-- 사용자의 모든 찜 전시회 조회 -->
    <select id="getUserLikeExhibitions" resultType="com.multi.culture_link.admin.exhibition.model.dto.api.ExhibitionApiDto">
        SELECT e.*
        FROM exhibition e
                 INNER JOIN exhibition_interested ei ON e.id = ei.exhibition_id
        WHERE ei.user_id = #{userId} AND ei.state = 'interested'
    </select>

    <!--     사용자의 모든 관심없음 전시회 조회-->
    <select id="getUserUnlikeExhibitions" resultType="com.multi.culture_link.admin.exhibition.model.dto.api.ExhibitionApiDto">
        SELECT e.*
        FROM exhibition e
                 INNER JOIN exhibition_interested ei ON e.id = ei.exhibition_id
        WHERE ei.user_id = #{userId} AND ei.state = 'not_interested'
    </select>





</mapper>